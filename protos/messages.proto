syntax = "proto3";

option java_multiple_files = true;

package edu.cmu.cs.hawk.api;

enum DatasetSplit {
  TRAIN = 0;
  TEST = 1;
}

message MissionId {
  string value = 1;
}

message ScoutConfiguration {
  string missionId = 1;
  repeated string scouts = 2;
  int32 scoutIndex = 3;
  string homeIP = 4;
  string trainLocation = 5;
  string missionDirectory = 6;
  TrainConfig trainStrategy = 7;
  RetrainPolicyConfig retrainPolicy = 8;
  Dataset dataset = 9;
  SelectiveConfig selector = 10;
  ReexaminationStrategyConfig reexamination = 11;
  ModelArchive initialModel = 12;
  ModelArchive baseModel = 13;
  bytes bootstrapZip = 14;
  map<int32, string> bandwidthFunc = 15;
  bool validate = 16;
  repeated string class_list = 17;
  PerScoutSCMLOptions scml_deploy_opts = 18;
  bool novel_class_discovery = 19;
  bool sub_class_discovery = 20;
}

message MissionStats {
  int64 totalObjects = 1;
  int64 processedObjects = 2;
  int64 droppedObjects = 3;
  int64 falseNegatives = 4;
  map<string, string> others = 5;
}

message TestResults {
  int64 testExamples = 1;
  double auc = 2;
  ModelMetrics modelMetrics = 3;
  double bestThreshold = 4;
  repeated double precisions = 5;
  repeated double recalls = 6;
  int32 version = 7;
}

message MissionResults {
  map<int32, TestResults> results = 1;
}

message ModelMetrics {
  int64 truePositives = 1;
  int64 falsePositives = 2;
  int64 falseNegatives = 3;
  double precision = 4;
  double recall = 5;
  double f1Score = 6;
}

message ImportModel {
  ModelArchive model = 1;
  string path = 2;
}

message ModelArchive {
  bytes content = 1;
  int32 version = 2;
}

message TrainConfig {
  oneof value {
    ModelConfig dnn_classifier = 1;
    ModelConfig yolo = 2;
    ModelConfig fsl = 3;
    ModelConfig dnn_classifier_radar = 4;
    ModelConfig yolo_radar = 5;
    ModelConfig activity_classifier = 6;
  }
}

message ModelConfig {
  map<string, string> args = 1;
}

message YOLOConfig {
  int32 imageSize = 1;
  string args = 2;
}

message RetrainPolicyConfig {
  oneof value {
    AbsolutePolicyConfig absolute = 1;
    PercentagePolicyConfig percentage = 2;
    ModelPolicyConfig model = 3;
    SampleIntervalPolicyConfig sample = 4;
  }
}

message AbsolutePolicyConfig {
  int32 threshold = 1;
  bool onlyPositives = 2;
}

message PercentagePolicyConfig {
  double threshold = 1;
  bool onlyPositives = 2;
}

message ModelPolicyConfig {
  string name = 1;
}

message SampleIntervalPolicyConfig {
  int32 num_intervals = 1;
}

message Dataset {
  oneof value {
    FileDataset frame = 1; // ultra high-def images
    FileDataset random = 2; // random sampling
    FileDataset tile = 3; // tile sampling
    FileDataset scope = 4; // scopecookie
    Streaming_Video video = 5; // ingest video stream
    NetworkDataset network = 6;
    FileDataset activity = 7;
  }
}

message FileDataset {
  string dataPath = 1; // path to index file or directory on scout
  int32 tileSize = 2;
  int32 numTiles = 3; // optional param for random sampling
  int32 timeout = 4; // optional param for random sampling
  bool resizeTile = 5;
  int32 fps = 6; // optional param for activity recognition : frame per second
  int32 N = 7;   // optional param for activity recognition : number of frames in video
}

message NetworkDataset {
  string dataPath = 1;
  int32 tileSize = 2;
  int32 numTiles = 3;
  int32 timeout = 4;
  bool resizeTile = 5;
  string dataServerAddr = 6; // host address of data server
  int32 dataServerPort = 7; // port of data server
  string dataBalanceMode = 8; // 'locally_constant' or 'globally_constant'
}

message Streaming_Video {
  int32 width = 1; // full frame width
  int32 height = 2; // full frame height
  int32 sampling_rate_fps = 3; // desired frame inference rate
  string video_path = 4; // full path to video
  int32 tile_height = 5;
  int32 tile_width = 6;
   }


message SelectiveConfig {
  oneof value {
    TopKConfig topk = 1;
    ThresholdConfig threshold = 2;
    TokenConfig token = 3;
    DiversityConfig diversity = 4;
  }
}

message TopKConfig {
  int32 k = 1;
  int32 batchSize = 2;
  double countermeasure_threshold = 3;
  int32 total_countermeasures = 4;
}

message ThresholdConfig {
  double threshold = 1;
}

message TokenConfig {
  int32 initial_samples = 1;
  int32 batch_size = 2;
  double countermeasure_threshold = 3;
  int32 total_countermeasures = 4;
  double upper_threshold_delta = 5;
  double lower_threshold_delta = 6;
  double upper_threshold_start = 7;
  double lower_threshold_start = 8;
  bool sliding_window = 9;
}

message DiversityConfig {
  int32 k = 1;
  int32 batchSize = 2;
  double countermeasure_threshold = 3;
  int32 total_countermeasures = 4;
}

message ReexaminationStrategyConfig {
  string type = 1;
  int32 k = 2;
}

message NoReexaminationStrategyConfig {
}

message TopReexaminationStrategyConfig {
  int32 k = 1;
}

message FullReexaminationStrategyConfig {
}

message HawkObject {
  string _objectId = 1;
  bytes content = 2;
  map<string, bytes> attributes = 3;
}

message SendTile {
  string _objectId = 1;
  int32 scoutIndex = 2;
  int32 version = 3;
  map<string, bytes> attributes = 4;
  repeated BoundingBox boundingBoxes = 5;
  bytes feature_vector = 6;
  bool novel_sample = 7;
}

// send labels for an object back from home to scout
message SendLabel {
  string _objectId = 1;
  int32 scoutIndex = 2;
  repeated BoundingBox boundingBoxes = 3;
}

// propagate (positive) labels and other associated data to other scouts
message LabeledTile {
  HawkObject obj = 1;
  repeated BoundingBox boundingBoxes = 2;
}

// classification and confidence score for a region of the image
// x,y,w,h are coordinates relative to the size of the image, with x and y
// being the center of the region.
// The whole image would be represented as [x=0.5, y=0.5, w=1.0, h=1.0].
// Classification only describes the whole image, detection may have one or
// more smaller regions. A negative sample has no associated bounding boxes.
message BoundingBox {
  float x = 1;
  float y = 2;
  float w = 3;
  float h = 4;
  string class_name = 5;
  float confidence = 6;
}

message PerScoutSCMLOptions {
  map<string, int32> scout_dict = 1;
}

message ChangeDeploymentStatus {
  bool ActiveStatus = 1;
  float ActiveScoutRatio = 2;
}
