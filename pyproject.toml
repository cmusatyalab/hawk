[project]
name = "cmuhawk"
version = "0.1.0"
description = "Hawk: Low-Bandwidth Remote Sensing of Rare Events"
readme = "README.md"
requires-python = ">=3.8,<3.13"
license = { text="GPL-2.0-only" }
authors = [
    { name="Carnegie Mellon University", email="<satya+group@cs.cmu.edu>" },
    { name="Shilpa George", email="<shilpag@andrew.cmu.edu>" },
    { name="Eric Sturzinger", email="<esturzin@andrew.cmu.edu>" },
    { name="Jan Harkes", email="<jaharkes@cs.cmu.edu>" }
]

dependencies = [
    "cattrs >= 23.1.0",
    "importlib-metadata (>=8.5,<9.0)",
    "importlib-resources (>=6.4,<7.0)",
    "logzero (>=1.5.0,<2.0.0)",
    "numpy (>=1.24.4,<2.0.0) ; python_version < '3.9'",
    "numpy (>=1.26.4,<2.0.0) ; python_version >= '3.9'",
    "pandas (>=2.0,<3.0)",
    "prometheus-client (>=0.20.0,<0.21.0)",
    "protobuf >= 4.24.0",
    "pydantic (>=2.10,<3.0)",
    "pydantic-settings (>=2.8,<3.0)",
    "pyyaml (>=6.0,<7.0)",
    "pyzmq >= 23.2.1",
    "tqdm (>=4.66.1,<5.0.0)",
    "typing-extensions (>=4.9.0,<5.0.0)",
]

[project.optional-dependencies]
home = [
    # decorator seems to be a missing fabric dependency...
    "decorator (>=5.1.1,<6.0.0)",
    "fabric (>=3.0.1,<4.0.0)",
    "pillow (>=10.4.0,<11.0.0)",
    "python-dateutil (>=2.8.1,<3.0.0)",
    "streamlit (>=1.40.1,<2.0.0) ; python_version != '3.9.7'",
    "streamlit-label-kit (>=0.1.2,<0.2.0) ; python_version != '3.9.7'"
]

scout = [
    "albumentations (>=1.3.1,<2.0.0)",
    "lovely-tensors (>=0.1.15,<0.2.0)",
    "matplotlib (>=3.6,<4.0)",
    "multiprocessing-logging (>=0.2.6,<0.3.0)",
    "opencv-python-headless (>=4.7.0.72,<5.0.0.0)",
    "scikit-image >= 0.21",
    "scikit-learn (>=1.3.0,<2.0.0)",
    "tensorboard (>=2.1.1,<3.0.0)",

    # Here we can try and compare different pytorch releases, after changing
    # this run `poetry lock ; poetry install -E home -E scout --sync`
    # "torch (>=1.13,<2.0)",
    # "torchvision (>=0.14,<0.15)",
    # "torch (>=2.0,<2.1)",
    # "torchvision (>=0.15<0.16)",
    # "torch (>=2.1,<2.2)",
    # "torchvision (>=0.16,<0.17)",
    "torch (>=2.2,<3.0)",
    "torchvision (>=0.17,<0.18)",

    # for activity recognition
    "av == 12.0.0",
    "einops ~= 0.8.0",
    # "movinet-pytorch @ git+https://github.com/Atze00/MoViNet-pytorch.git@main",
    # pre-built wheel for the above git repo at https://storage.cmusatyalab.org/wheels
    "movinet-pytorch == 0.2.2",
]

# under development, to be added to scout
# for http retriever
http = [
    "httpx (>=0.28.1,<0.29.0)"
]

[project.urls]
repository = "https://github.com/cmusatyalab/hawk"
"Bug Tracker" = "https://github.com/cmusatyalab/hawk/issues"

[project.scripts]
hawk_deploy = "hawk.deploy.__main__:main"
hawk_gui = "hawk.gui.__main__:main"
hawk_home = "hawk.home.home_main:main"
hawk_scout = "hawk.scout.server_main:main"
hawk_script_labeler = "hawk.home.script_labeler:main"

[project.entry-points."cmuhawk.retrievers"]
frame = "hawk.scout.retrieval.frame_retriever:FrameRetriever"
http = "hawk.scout.retrieval.http_retriever:HTTPRetriever"
k600 = "hawk.scout.retrieval.kinetics600.kinetics_600_retriever:K600Retriever"
network = "hawk.scout.retrieval.network_retriever:NetworkRetriever"
radar = "hawk.scout.retrieval.radar_retriever:RadarRetriever"
random = "hawk.scout.retrieval.random_retriever:RandomRetriever"
tile = "hawk.scout.retrieval.tile_retriever:TileRetriever"
video = "hawk.scout.retrieval.video_retriever:VideoRetriever"

[project.entry-points."cmuhawk.models"]
activity_recognition = "hawk.scout.trainer.k600_classifier.trainer:ActivityTrainer"
dnn_classifier = "hawk.scout.trainer.dnn_classifier.trainer:DNNClassifierTrainer"
dnn_classifier_radar = "hawk.scout.trainer.dnn_classifier_radar.trainer:DNNClassifierTrainerRadar"
fsl = "hawk.scout.trainer.fsl.trainer:FSLTrainer"
yolo = "hawk.scout.trainer.yolo.trainer:YOLOTrainer"
yolo_radar = "hawk.scout.trainer.yolo_radar.trainer:YOLOTrainerRadar"

[tool.poetry]
packages = [
    { include = "hawk", from = "src" }
]

[tool.poetry.dependencies]
movinet-pytorch = { source = "hawk-extra" }
# for torch >= 2.1
torch = { source = "torch-cu11" }
torchvision = { source = "torch-cu11" }

[[tool.poetry.source]]
name = "hawk-extra"
url = "https://storage.cmusatyalab.org/wheels"
priority = "explicit"

[[tool.poetry.source]]
name = "torch-cu11"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry.group.dev.dependencies]
grpcio-tools = "^1.48.2,<1.73.0"
mypy = "^1.2.0"
mypy-protobuf = "^1.20"
nox = {extras = ["uv"], version = "^2025.5.1"}
pandas-stubs = "^2.0"
poethepoet = "^0.19.0"
pre-commit = "^3.3.3"
pytest = "^7.4.3"
pytest-benchmark = "^4.0.0"
types-invoke = "^2.0.0.10"
types-paramiko = "^3.0.0.8"
types-pillow = "^10.0.0.3"
types-protobuf = ">=4.24.0.2"
types-pyyaml = "^6.0.12.10"
types-requests = "^2.31.0.6"
types-tqdm = "^4.66.0.2"

[tool.mypy]
strict = true
files = ["src", "hawk-plugin-template"]
exclude = "^src/hawk/scout/trainer/(few_shot/|yolo.*/yolov5.*/)"
plugins = ["numpy.typing.mypy_plugin", "pydantic.mypy"]

[[tool.mypy.overrides]]
# ignore missing type hints errors from untyped modules
module = [
    "albumentations.*",
    "cv2.*",
    "fabric.*",
    "logzero.*",
    "matplotlib.*",
    "movinets.*",
    "multiprocessing_logging.*",
    "sklearn.*",
    "streamlit_label_kit",
    "websockets.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
]
ignore_missing_imports = true
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.poe]
include = "poe_tasks.toml"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:pkg_resources is deprecated as an API",
    "ignore:Deprecated call to `pkg_resources.declare_namespace",
]
markers = [
    "cuda: marks tests that depend on CUDA (deselect with '-m \"not cuda\"')",
    "home: components that run on home (deselect with '-m \"not home\"')",
    "scout: components that run on the scout (deselect with '-m \"not scout\"')",
]

[tool.ruff]
target-version = "py38"
exclude = [
    "*_pb2.py",
    "src/hawk/scout/trainer/few_shot/*/*",
    "src/hawk/scout/trainer/yolo/yolov5/*",
    "src/hawk/scout/trainer/yolo_radar/yolov5_radar/*",
]
include = ["pyproject.toml", "src/**/*.py", "scripts/**/*.py", "tests/**/*.py"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]

[tool.ruff.lint.flake8-copyright]
min-file-size = 1
notice-rgx = '(?i)(Copyright|SPDX-FileCopyrightText:)\s+((?:\(C\)|Â©)\s+)?\d{4}(-\d{4})*'

[tool.typos.default.extend-words]
booststrap = "bootstrap"
DOTA = "DOTA"  # name of a dataset we use
missino = "mission"
thr = "thr"  # abbreviation of threshold

[tool.uv.sources]
movinet-pytorch = { index = "hawk-extra" }
torch = { index = "torch-cu11" }
torchvision = { index = "torch-cu11" }

[[tool.uv.index]]
name = "hawk-extra"
url = "https://storage.cmusatyalab.org/wheels"
explicit = true

[[tool.uv.index]]
name = "torch-cu11"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[tool.uv.build-backend]
module-name = "hawk"

[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"
